// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Supplier {
  id                 Int                @id @default(autoincrement())
  companyName        String
  tradingName        String
  cnpj               String             @unique
  email              String             @unique
  phoneNumber        String?
  mobileNumber       String
  segment            String
  website            String?
  description        String?
  logo               String
  street             String
  number             String
  neighborhood       String
  city               String
  state              String
  zipCode            String
  actionAreas        Json?              @default("[]")
  supplierCategoryId Int?
  supplierCategory   SuppliersCategory? @relation(fields: [supplierCategoryId], references: [id])
  products           Products[]
  active             Boolean            @default(true)
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt

  @@map("suppliers")
}

model SuppliersCategory {
  id            Int                 @id @default(autoincrement())
  name          String
  parentId      Int?
  parent        SuppliersCategory?  @relation("SubSuppliersCategory", fields: [parentId], references: [id])
  subcategories SuppliersCategory[] @relation("SubSuppliersCategory")
  suppliers     Supplier[]
  active        Boolean             @default(true)
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt

  @@map("suppliers_categories")
}

model Features {
  id              Int               @id @default(autoincrement())
  name            String
  icon            String
  active          Boolean           @default(true)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  productFeatures ProductFeatures[]

  @@map("features")
}

model ProductFeatures {
  id         Int      @id @default(autoincrement())
  productId  Int
  product    Products @relation(fields: [productId], references: [id])
  featuresId Int
  features   Features @relation(fields: [featuresId], references: [id])
  active     Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("product_features")
}

model Keywords {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  active          Boolean           @default(true)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  productKeywords ProductKeywords[]

  @@map("keywords")
}

model ProductKeywords {
  id        Int      @id @default(autoincrement())
  productId Int
  product   Products @relation(fields: [productId], references: [id])
  keywordId Int
  keywords  Keywords @relation(fields: [keywordId], references: [id])
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("product_keywords")
}

model Products {
  id                 Int                 @id @default(autoincrement())
  name               String
  subtitle           String
  description        String              @db.Text
  brand              String
  image              String
  rating             Int                 @default(5)
  minimumToEstimate  Int                 @default(1)
  price              Float
  priceUpdatedAt     DateTime
  supplierId         Int
  supplier           Supplier            @relation(fields: [supplierId], references: [id])
  productCategory    ProductsCategory?   @relation(fields: [productCategoryId], references: [id])
  productCategoryId  Int?
  active             Boolean             @default(true)
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  productsVariations ProductVariations[]
  productFeatures    ProductFeatures[]
  estimates          Estimate[]
  productKeywords    ProductKeywords[]

  @@map("products")
}

model ProductsCategory {
  id            Int                @id @default(autoincrement())
  name          String
  image         String?
  parentId      Int?
  parent        ProductsCategory?  @relation("SubProductsCategory", fields: [parentId], references: [id])
  subcategories ProductsCategory[] @relation("SubProductsCategory")
  products      Products[]
  active        Boolean            @default(true)
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt

  @@map("products_categories")
}

model Variations {
  id                        Int                        @id @default(autoincrement())
  name                      String                     @unique
  active                    Boolean                    @default(true)
  createdAt                 DateTime                   @default(now())
  updatedAt                 DateTime                   @updatedAt
  variationsOptions         VariationOptions[]
  productsVariation         ProductVariations[]
  estimateProductVariations EstimateProductVariation[]

  @@map("variations")
}

model VariationOptions {
  id                        Int                        @id @default(autoincrement())
  name                      String
  variation                 Variations                 @relation(fields: [variationId], references: [id])
  variationId               Int
  active                    Boolean                    @default(true)
  createdAt                 DateTime                   @default(now())
  updatedAt                 DateTime                   @updatedAt
  productsVariationOptions  ProductVariationOptions[]
  estimateProductVariations EstimateProductVariation[]

  @@map("variation_options")
}

model ProductVariations {
  id                      Int                       @id @default(autoincrement())
  product                 Products                  @relation(fields: [productId], references: [id])
  productId               Int
  variation               Variations                @relation(fields: [variationId], references: [id])
  variationId             Int
  active                  Boolean                   @default(true)
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  productVariationOptions ProductVariationOptions[]

  @@map("product_variations")
}

model ProductVariationOptions {
  id                 Int               @id @default(autoincrement())
  productVariation   ProductVariations @relation(fields: [productVariationId], references: [id])
  productVariationId Int
  variationOption    VariationOptions  @relation(fields: [variationOptionId], references: [id])
  variationOptionId  Int
  active             Boolean           @default(true)
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt

  @@map("product_variation_options")
}

model Estimate {
  id                        Int                        @id @default(autoincrement())
  clientName                String
  clientEmail               String
  clientPhone               String
  clientCompanyName         String
  clientSegment             String?
  clientFile                String?
  clientMessage             String?                    @db.Text
  productId                 Int
  quantity                  Int
  price                     Decimal                    @default(0) @db.Decimal(9, 2)
  product                   Products                   @relation(fields: [productId], references: [id])
  estimateProductVariations EstimateProductVariation[]
  nonce                     String                     @unique
  status                    String                     @default("pending")
  active                    Boolean                    @default(true)
  createdAt                 DateTime                   @default(now())
  updatedAt                 DateTime                   @updatedAt
  EstimateTimeline          EstimateTimeline[]

  @@map("estimates")
}

model EstimateTimeline {
  id         Int      @id @default(autoincrement())
  estimate   Estimate @relation(fields: [estimateId], references: [id])
  estimateId Int
  message    String?
  code       Int
  active     Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("estimates_timeline")
}

model EstimateProductVariation {
  id                Int              @id @default(autoincrement())
  estimateId        Int
  variationId       Int
  variationOptionId Int
  estimate          Estimate         @relation(fields: [estimateId], references: [id])
  variation         Variations       @relation(fields: [variationId], references: [id])
  variationOption   VariationOptions @relation(fields: [variationOptionId], references: [id])
  active            Boolean          @default(true)
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt

  @@map("estimate_product_variations")
}

model Users {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  type      String
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}
